# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

# on.push, on.pull_request에 설정한 branch에 이벤트가 발생하는 경우 jobs가 실행
on:
  push:
    branches: [ "dev" ] # 개발환경 세팅
  # pull_request:
  #   branches: [ "dev" ] # 개발환경 세팅

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 저장소 Checkout
        uses: actions/checkout@v3

      - name: 스프링부트 애플리케이션 빌드 # (1) build/libs 디렉토리에 jar 파일 생성
        run: ./gradlew build

      - name: 도커 이미지 빌드 # (2) 현재 디렉토리의 Dockerfile을 사용하여 도커 이미지 빌드
        run: docker build -t taebong98/dh-server .

      - name: Docker Hub 로그인 #(3) docker/login-action 이라는 Action(명령어)를 사용하여 도커 로그인 진행
        uses: docker/login-action@v2 #-u, -p 옵션을 사용하면 GitHub Actions에서 보앙산 이유로 오류 발생
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Hub 퍼블리시 #(4) push 명령을 사용해서 DockerHub 저장소에 이미지를 publish
        run: docker push taebong98/server
